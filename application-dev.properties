# 开发环境配置文件
# 复制此文件到 application.properties 并根据实际情况修改配置

spring.application.name=user-service

server.port=8082

# Nacos 服务注册与发现
spring.cloud.nacos.discovery.server-addr=localhost:8848
spring.cloud.nacos.discovery.namespace=public
spring.cloud.nacos.discovery.group=DEFAULT_GROUP
spring.cloud.nacos.config.server-addr=localhost:8848
spring.cloud.nacos.config.namespace=public
spring.cloud.nacos.config.group=DEFAULT_GROUP
spring.cloud.nacos.config.file-extension=yml

# ShardingSphere 分库分表配置
spring.shardingsphere.datasource.names=ds0,ds1
spring.shardingsphere.datasource.ds0.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds0.jdbc-url=jdbc:mysql://localhost:3306/user_db_0?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Shanghai&useSSL=false
spring.shardingsphere.datasource.ds0.username=root
spring.shardingsphere.datasource.ds0.password=root123
spring.shardingsphere.datasource.ds1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds1.jdbc-url=jdbc:mysql://localhost:3306/user_db_1?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Shanghai&useSSL=false
spring.shardingsphere.datasource.ds1.username=root
spring.shardingsphere.datasource.ds1.password=root123

# 分库分表规则配置
spring.shardingsphere.rules.sharding.tables.users.actual-data-nodes=ds$->{0..1}.users_$->{0..1}
spring.shardingsphere.rules.sharding.tables.users.table-strategy.standard.sharding-column=user_id
spring.shardingsphere.rules.sharding.tables.users.table-strategy.standard.sharding-algorithm-name=table-hash-mod
spring.shardingsphere.rules.sharding.tables.users.database-strategy.standard.sharding-column=user_id
spring.shardingsphere.rules.sharding.tables.users.database-strategy.standard.sharding-algorithm-name=database-hash-mod
spring.shardingsphere.rules.sharding.tables.users.key-generate-strategy.column=user_id
spring.shardingsphere.rules.sharding.tables.users.key-generate-strategy.key-generator-name=snowflake

# 分片算法配置
spring.shardingsphere.rules.sharding.sharding-algorithms.database-hash-mod.type=HASH_MOD
spring.shardingsphere.rules.sharding.sharding-algorithms.database-hash-mod.props.sharding-count=2
spring.shardingsphere.rules.sharding.sharding-algorithms.table-hash-mod.type=HASH_MOD
spring.shardingsphere.rules.sharding.sharding-algorithms.table-hash-mod.props.sharding-count=2

# 分布式主键生成器配置
spring.shardingsphere.rules.sharding.key-generators.snowflake.type=SNOWFLAKE
spring.shardingsphere.rules.sharding.key-generators.snowflake.props.worker-id=1

# SQL显示配置（开发环境开启）
spring.shardingsphere.props.sql-show=true

# RocketMQ 消息队列配置
rocketmq.name-server=localhost:9876
rocketmq.producer.group=user-service-producer
rocketmq.producer.send-message-timeout=3000
rocketmq.producer.retry-times-when-send-failed=2

# Seata 分布式事务配置
seata.enabled=true
seata.application-id=user-service
seata.tx-service-group=user-service-group
seata.service.vgroup-mapping.user-service-group=default
seata.service.grouplist.default=localhost:8091

# JWT 配置
jwt.secret=mySecretKey12345678901234567890
jwt.expiration=86400000

# 日志配置
logging.level.com.example.userservice=debug
logging.level.org.apache.shardingsphere.sql=debug

# Feign 配置
feign.client.config.default.connect-timeout=5000
feign.client.config.default.read-timeout=5000

# 健康检查配置
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always 